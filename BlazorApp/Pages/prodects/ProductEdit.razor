@page "/Product/Edit/{Id:int}"
@inject ProdectService prodectService
@inject CategoryService categoryService

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header text-dark">
            <h3 class="card-title mb-0">Product Edit</h3>
        </div>
        <div class="card-body">
            <EditForm Model="@Product" OnValidSubmit="Save">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>
                <div class="mb-3">
                    <label for="productName" class="form-label">Product Name</label>
                    <InputText id="productName" placeholder="Enter Product Name" @bind-Value="Product.ProdectName" class="form-control" />
                    <ValidationMessage For="()=>Product.ProdectName" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="productDescription" class="form-label">Product Description</label>
                    <InputTextArea id="productDescription" placeholder="Enter Product Description" @bind-Value="Product.Description" class="form-control" />
                    <ValidationMessage For="() => Product.Description" class="text-danger" />

                </div>
                <div class="mb-3">
                    <label for="productPrice" class="form-label">Product Price</label>
                    <InputNumber id="productPrice" placeholder="Enter Product Price" @bind-Value="Product.Price" class="form-control" />
                    <ValidationMessage For="() => Product.Price" class="text-danger" />

                </div>
                <div class="mb-3">
                    <label for="imageName" class="form-label">Image Name</label>
                    <InputText id="imageName" placeholder="Enter Image Name" @bind-Value="Product.ImageName" class="form-control" />
                    <ValidationMessage For="() => Product.ImageName" class="text-danger" />

                </div>
                <div class="mb-3">
                    <label for="category" class="form-label">Category</label>
                    <InputSelect id="category" @bind-Value="Product.CategoryId" class="form-control">
                        <option value="0">Select a Category</option>
                        @foreach (var cat in Categories)
                        {
                            <option value="@cat.Id">@cat.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => Product.CategoryId" class="text-danger" />

                </div>
                <div class="d-grid gap-2 mt-4">
                    <button type="submit" class="btn btn-primary btn-lg">Save Product</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public ProductModel Product { get; set; } = new ProductModel();
    public List<Category> Categories { get; set; }

    protected override Task OnInitializedAsync()
    {

        Product = prodectService.GetProdectById(Id);
        Categories = categoryService.GetAllCategories();
        return base.OnInitializedAsync();
    }

    public void Save()
    {
        // Your logic to save the product goes here
    }
}